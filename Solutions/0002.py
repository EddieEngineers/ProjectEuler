# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
# the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
# even-valued terms.


def fib(limit):
    if limit == 1:
        return [1]

    if limit == 2:
        return [1, 1]

    fib_sequence = [1, 1]

    while fib_sequence[-1] + fib_sequence[-2] < limit:
        fib_sequence.append(fib_sequence[-1] + fib_sequence[-2])

    return fib_sequence


def is_even(n):
    return n % 2 == 0


def solve(limit):
    fib_sequence = fib(limit)
    even_fib_sequence = filter(is_even, fib_sequence)

    return sum(even_fib_sequence)


if __name__ == '__main__':
    print(solve(3))
